var gvHttps = function(opt, callback) {
    console.log("gvHttps created opt=" + JSON.stringify(opt));
    if(opt.uri)
        opt.host = opt.uri;
    gvHttps.request(opt, function(req)
        {
            req.on('error', function() {
                console.log("**** gvHttps error: " + JSON.stringify(arguments));
                callback(true, req.response, req.body);
            });
            req.on('data', function() {
                console.log("**** gvHttps data received."/* + JSON.stringify(arguments)*/);
            });
            req.on('end', function() {
                callback(req.statusCode < 200 || req.statusCode > 401, req.response, req.body);
                console.log("**** gvHttps end: " + JSON.stringify(arguments));
            });
        }
    );
};

gvHttps.prototype = {};

gvHttps.prototype.request = function(options, callback) {
    var libraries = MojoLoader.require({ name: "foundations", version: "1.0" });
    var Future = libraries["foundations"].Control.Future;
    var AjaxCall = libraries["foundations"].Comms.AjaxCall;

    var EventEmitter = require('events').EventEmitter;

    var host = options.host || "www.google.com";
    var port = options.port || 443;
    var path = options.path || "/";
    var method = options.method || "GET";
    var headers = options.headers || "";
    var body = options.body;
    
    var url = host + /*":" + port +*/ path;
    if(url.indexOf("http") != 0) {
        url = "https://" + url;
    }
    var opt = {
        headers: headers
    };
    
    var emitter = new EventEmitter;
    callback(emitter);
    //var future1 = (method === "GET" ? AjaxCall.get : AjaxCall.post)(url, opt);
    console.log("Making AjaxCall url=" + JSON.stringify(url));
    console.log("AjaxCall opt=" + JSON.stringify(opt));
    var future1;
    /*if(method == "GET") 
        future1 = AjaxCall.get(url, opt);
    else if(method == "POST")
        future1 = AjaxCall.post(url, body, opt);
    else {
        throw("Error: unknown method");
    }*/
    if(method == "GET")
        method = AjaxCall.RequestMethod.GET;
    else if(method == "POST")
        method = AjaxCall.RequestMethod.POST;
    else {
        throw("Error: unknown method");
    }
    var future1 = AjaxCall.call(method, url, body, opt);
    future1.onError(function() {
        console.log("************ AjaxCall error received! " + JSON.stringify(future1.getException()));
        emitter.emit('error', { statusCode: 501 });
    });
    future1.then(function(future) {
        console.log("AjaxCall returned." /*+ JSON.stringify(future.result)*/);
        emitter.statusCode = future.result.status;
        if(future.result.status < 200 || future.result.status > 401) {
          emitter.emit('error', { statusCode: future.result.status });
          return;
        }
        //emitter.response = future.result.responseText;
        emitter.response = future.result;
        emitter.response.statusCode = future.result.status;
        emitter.body = future.result.responseText;
        emitter.emit('data', future.result.responseText);
        emitter.emit('end');
    });
    return emitter;
};

gvHttps.request = gvHttps.prototype.request;

exports.gvhttps = gvHttps;
